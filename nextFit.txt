#include <iostream.h>
#include <conio.h>

void printAllocatedBlocks(int allocatedBlocks[], int procArr[], int procSize) {
	cout << "Processor No\tProcessorSize\tBlock No" << endl;
	for(int i = 0; i < procSize; i++) {
		cout << i+1 << "\t\t" << procArr[i] << "\t\t";
		if(allocatedBlocks[i] != -1) {
			cout << allocatedBlocks[i] << endl;
		} else {
			cout << "Not allocated" << endl;
		}
	}
}

void nextFit(int memoryBlocks[], int memSize, int procArr[], int procSize) {

	int allocatedBlocks[20];
	for(int i = 0; i < procSize; i++) {
    allocatedBlocks[i] = -1;
  }

	int j = 0, endptr = memSize - 1;
	for(int i = 0; i < procSize; i++) {
		while(j < memSize) {
			if(memoryBlocks[j] >= procArr[i]) {
				allocatedBlocks[i] = j+1;
				memoryBlocks[j] -= procArr[i];

				endptr = (j - 1)%memSize;
				break;
			}

			if(j == endptr) {
				endptr = (j - 1)%memSize;
				break;
			}
			j = (j+1)%memSize;
		}
	}

	printAllocatedBlocks(allocatedBlocks, procArr, procSize);
}

int main() {
	clrscr();

	int memoryBlocks[] = { 200, 100, 225, 300, 210 };
	int memSize = sizeof(memoryBlocks) / sizeof(memoryBlocks[0]);

	int procArr[] = { 100, 200, 90, 290 };
	int procSize = sizeof(procArr) / sizeof(procArr[0]);
  
	//1,3,4,n
	nextFit(memoryBlocks, memSize, procArr, procSize);

	getch();
	return 0;
}
